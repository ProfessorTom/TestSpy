// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"TestSpy::TestSpyPackageTests::ProductTarget" /* TestSpyPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_177 /* Build configuration list for PBXAggregateTarget "TestSpyPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_180 /* PBXTargetDependency */,
			);
			name = TestSpyPackageTests;
			productName = TestSpyPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_100 /* AssertionDispatcher.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* AssertionDispatcher.swift */; };
		OBJ_101 /* AssertionRecorder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* AssertionRecorder.swift */; };
		OBJ_102 /* NMBExpectation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* NMBExpectation.swift */; };
		OBJ_103 /* NMBObjCMatcher.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_39 /* NMBObjCMatcher.swift */; };
		OBJ_104 /* NimbleEnvironment.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* NimbleEnvironment.swift */; };
		OBJ_105 /* NimbleXCTestHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* NimbleXCTestHandler.swift */; };
		OBJ_106 /* ExceptionCapture.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* ExceptionCapture.swift */; };
		OBJ_107 /* DSL+Wait.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_44 /* DSL+Wait.swift */; };
		OBJ_108 /* DSL.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_45 /* DSL.swift */; };
		OBJ_109 /* Expectation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_46 /* Expectation.swift */; };
		OBJ_110 /* ExpectationMessage.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_47 /* ExpectationMessage.swift */; };
		OBJ_111 /* Expression.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_48 /* Expression.swift */; };
		OBJ_112 /* FailureMessage.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_49 /* FailureMessage.swift */; };
		OBJ_113 /* AllPass.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_51 /* AllPass.swift */; };
		OBJ_114 /* Async.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_52 /* Async.swift */; };
		OBJ_115 /* BeAKindOf.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_53 /* BeAKindOf.swift */; };
		OBJ_116 /* BeAnInstanceOf.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_54 /* BeAnInstanceOf.swift */; };
		OBJ_117 /* BeCloseTo.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_55 /* BeCloseTo.swift */; };
		OBJ_118 /* BeEmpty.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_56 /* BeEmpty.swift */; };
		OBJ_119 /* BeGreaterThan.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_57 /* BeGreaterThan.swift */; };
		OBJ_120 /* BeGreaterThanOrEqualTo.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_58 /* BeGreaterThanOrEqualTo.swift */; };
		OBJ_121 /* BeIdenticalTo.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_59 /* BeIdenticalTo.swift */; };
		OBJ_122 /* BeLessThan.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_60 /* BeLessThan.swift */; };
		OBJ_123 /* BeLessThanOrEqual.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_61 /* BeLessThanOrEqual.swift */; };
		OBJ_124 /* BeLogical.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_62 /* BeLogical.swift */; };
		OBJ_125 /* BeNil.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_63 /* BeNil.swift */; };
		OBJ_126 /* BeVoid.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_64 /* BeVoid.swift */; };
		OBJ_127 /* BeginWith.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_65 /* BeginWith.swift */; };
		OBJ_128 /* Contain.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_66 /* Contain.swift */; };
		OBJ_129 /* ContainElementSatisfying.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_67 /* ContainElementSatisfying.swift */; };
		OBJ_130 /* EndWith.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_68 /* EndWith.swift */; };
		OBJ_131 /* Equal.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_69 /* Equal.swift */; };
		OBJ_132 /* HaveCount.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_70 /* HaveCount.swift */; };
		OBJ_133 /* Match.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_71 /* Match.swift */; };
		OBJ_134 /* MatchError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_72 /* MatchError.swift */; };
		OBJ_135 /* MatcherFunc.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_73 /* MatcherFunc.swift */; };
		OBJ_136 /* MatcherProtocols.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_74 /* MatcherProtocols.swift */; };
		OBJ_137 /* PostNotification.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_75 /* PostNotification.swift */; };
		OBJ_138 /* Predicate.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_76 /* Predicate.swift */; };
		OBJ_139 /* RaisesException.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_77 /* RaisesException.swift */; };
		OBJ_140 /* SatisfyAllOf.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_78 /* SatisfyAllOf.swift */; };
		OBJ_141 /* SatisfyAnyOf.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_79 /* SatisfyAnyOf.swift */; };
		OBJ_142 /* ThrowAssertion.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_80 /* ThrowAssertion.swift */; };
		OBJ_143 /* ThrowError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_81 /* ThrowError.swift */; };
		OBJ_144 /* ToSucceed.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_82 /* ToSucceed.swift */; };
		OBJ_145 /* Await.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_84 /* Await.swift */; };
		OBJ_146 /* Errors.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_85 /* Errors.swift */; };
		OBJ_147 /* Functional.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_86 /* Functional.swift */; };
		OBJ_148 /* SourceLocation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_87 /* SourceLocation.swift */; };
		OBJ_149 /* Stringers.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_88 /* Stringers.swift */; };
		OBJ_156 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_89 /* Package.swift */; };
		OBJ_162 /* TestSpy+Matchers.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* TestSpy+Matchers.swift */; };
		OBJ_163 /* CallstackContainer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* CallstackContainer.swift */; };
		OBJ_164 /* CallstackMatcher.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* CallstackMatcher.swift */; };
		OBJ_165 /* CallstackPredicate.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* CallstackPredicate.swift */; };
		OBJ_166 /* TestSpy.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* TestSpy.swift */; };
		OBJ_168 /* Nimble.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Nimble::Nimble::Product" /* Nimble.framework */; };
		OBJ_175 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_186 /* CallStackContainerSpec.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* CallStackContainerSpec.swift */; };
		OBJ_187 /* CallstackMatcherSpec.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* CallstackMatcherSpec.swift */; };
		OBJ_188 /* CallstackMatchers+NimbleSpec.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* CallstackMatchers+NimbleSpec.swift */; };
		OBJ_189 /* FakeCallstackPredicate.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* FakeCallstackPredicate.swift */; };
		OBJ_190 /* TestMethod.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* TestMethod.swift */; };
		OBJ_191 /* TestSpyObject.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* TestSpyObject.swift */; };
		OBJ_192 /* TestSpy+MatchersSpec.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* TestSpy+MatchersSpec.swift */; };
		OBJ_193 /* TestSpySpec.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* TestSpySpec.swift */; };
		OBJ_194 /* XCTestManifests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* XCTestManifests.swift */; };
		OBJ_196 /* TestSpy.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "TestSpy::TestSpy::Product" /* TestSpy.framework */; };
		OBJ_197 /* Nimble.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Nimble::Nimble::Product" /* Nimble.framework */; };
		OBJ_99 /* AdapterProtocols.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* AdapterProtocols.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		9DB0E776213D466A000BD146 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Nimble::Nimble";
			remoteInfo = Nimble;
		};
		9DB0E777213D466A000BD146 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "TestSpy::TestSpy";
			remoteInfo = TestSpy;
		};
		9DB0E778213D466A000BD146 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Nimble::Nimble";
			remoteInfo = Nimble;
		};
		9DB0E779213D466A000BD146 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "TestSpy::TestSpyTests";
			remoteInfo = TestSpyTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"Nimble::Nimble::Product" /* Nimble.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Nimble.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* TestSpy+Matchers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "TestSpy+Matchers.swift"; sourceTree = "<group>"; };
		OBJ_12 /* CallstackContainer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CallstackContainer.swift; sourceTree = "<group>"; };
		OBJ_14 /* CallstackMatcher.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CallstackMatcher.swift; sourceTree = "<group>"; };
		OBJ_15 /* CallstackPredicate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CallstackPredicate.swift; sourceTree = "<group>"; };
		OBJ_16 /* TestSpy.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestSpy.swift; sourceTree = "<group>"; };
		OBJ_19 /* CallStackContainerSpec.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CallStackContainerSpec.swift; sourceTree = "<group>"; };
		OBJ_20 /* CallstackMatcherSpec.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CallstackMatcherSpec.swift; sourceTree = "<group>"; };
		OBJ_21 /* CallstackMatchers+NimbleSpec.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "CallstackMatchers+NimbleSpec.swift"; sourceTree = "<group>"; };
		OBJ_23 /* FakeCallstackPredicate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FakeCallstackPredicate.swift; sourceTree = "<group>"; };
		OBJ_24 /* TestMethod.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestMethod.swift; sourceTree = "<group>"; };
		OBJ_25 /* TestSpyObject.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestSpyObject.swift; sourceTree = "<group>"; };
		OBJ_26 /* TestSpy+MatchersSpec.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "TestSpy+MatchersSpec.swift"; sourceTree = "<group>"; };
		OBJ_27 /* TestSpySpec.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestSpySpec.swift; sourceTree = "<group>"; };
		OBJ_28 /* XCTestManifests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XCTestManifests.swift; sourceTree = "<group>"; };
		OBJ_29 /* SourceryExample */ = {isa = PBXFileReference; lastKnownFileType = folder; path = SourceryExample; sourceTree = SOURCE_ROOT; };
		OBJ_30 /* Carthage */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Carthage; sourceTree = SOURCE_ROOT; };
		OBJ_35 /* AdapterProtocols.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AdapterProtocols.swift; sourceTree = "<group>"; };
		OBJ_36 /* AssertionDispatcher.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AssertionDispatcher.swift; sourceTree = "<group>"; };
		OBJ_37 /* AssertionRecorder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AssertionRecorder.swift; sourceTree = "<group>"; };
		OBJ_38 /* NMBExpectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NMBExpectation.swift; sourceTree = "<group>"; };
		OBJ_39 /* NMBObjCMatcher.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NMBObjCMatcher.swift; sourceTree = "<group>"; };
		OBJ_40 /* NimbleEnvironment.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NimbleEnvironment.swift; sourceTree = "<group>"; };
		OBJ_41 /* NimbleXCTestHandler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NimbleXCTestHandler.swift; sourceTree = "<group>"; };
		OBJ_43 /* ExceptionCapture.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExceptionCapture.swift; sourceTree = "<group>"; };
		OBJ_44 /* DSL+Wait.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DSL+Wait.swift"; sourceTree = "<group>"; };
		OBJ_45 /* DSL.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DSL.swift; sourceTree = "<group>"; };
		OBJ_46 /* Expectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Expectation.swift; sourceTree = "<group>"; };
		OBJ_47 /* ExpectationMessage.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExpectationMessage.swift; sourceTree = "<group>"; };
		OBJ_48 /* Expression.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Expression.swift; sourceTree = "<group>"; };
		OBJ_49 /* FailureMessage.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FailureMessage.swift; sourceTree = "<group>"; };
		OBJ_51 /* AllPass.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AllPass.swift; sourceTree = "<group>"; };
		OBJ_52 /* Async.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Async.swift; sourceTree = "<group>"; };
		OBJ_53 /* BeAKindOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeAKindOf.swift; sourceTree = "<group>"; };
		OBJ_54 /* BeAnInstanceOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeAnInstanceOf.swift; sourceTree = "<group>"; };
		OBJ_55 /* BeCloseTo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeCloseTo.swift; sourceTree = "<group>"; };
		OBJ_56 /* BeEmpty.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeEmpty.swift; sourceTree = "<group>"; };
		OBJ_57 /* BeGreaterThan.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeGreaterThan.swift; sourceTree = "<group>"; };
		OBJ_58 /* BeGreaterThanOrEqualTo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeGreaterThanOrEqualTo.swift; sourceTree = "<group>"; };
		OBJ_59 /* BeIdenticalTo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeIdenticalTo.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_60 /* BeLessThan.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeLessThan.swift; sourceTree = "<group>"; };
		OBJ_61 /* BeLessThanOrEqual.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeLessThanOrEqual.swift; sourceTree = "<group>"; };
		OBJ_62 /* BeLogical.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeLogical.swift; sourceTree = "<group>"; };
		OBJ_63 /* BeNil.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeNil.swift; sourceTree = "<group>"; };
		OBJ_64 /* BeVoid.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeVoid.swift; sourceTree = "<group>"; };
		OBJ_65 /* BeginWith.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeginWith.swift; sourceTree = "<group>"; };
		OBJ_66 /* Contain.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Contain.swift; sourceTree = "<group>"; };
		OBJ_67 /* ContainElementSatisfying.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContainElementSatisfying.swift; sourceTree = "<group>"; };
		OBJ_68 /* EndWith.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EndWith.swift; sourceTree = "<group>"; };
		OBJ_69 /* Equal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Equal.swift; sourceTree = "<group>"; };
		OBJ_70 /* HaveCount.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HaveCount.swift; sourceTree = "<group>"; };
		OBJ_71 /* Match.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Match.swift; sourceTree = "<group>"; };
		OBJ_72 /* MatchError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatchError.swift; sourceTree = "<group>"; };
		OBJ_73 /* MatcherFunc.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatcherFunc.swift; sourceTree = "<group>"; };
		OBJ_74 /* MatcherProtocols.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatcherProtocols.swift; sourceTree = "<group>"; };
		OBJ_75 /* PostNotification.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PostNotification.swift; sourceTree = "<group>"; };
		OBJ_76 /* Predicate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Predicate.swift; sourceTree = "<group>"; };
		OBJ_77 /* RaisesException.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RaisesException.swift; sourceTree = "<group>"; };
		OBJ_78 /* SatisfyAllOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SatisfyAllOf.swift; sourceTree = "<group>"; };
		OBJ_79 /* SatisfyAnyOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SatisfyAnyOf.swift; sourceTree = "<group>"; };
		OBJ_80 /* ThrowAssertion.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThrowAssertion.swift; sourceTree = "<group>"; };
		OBJ_81 /* ThrowError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThrowError.swift; sourceTree = "<group>"; };
		OBJ_82 /* ToSucceed.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ToSucceed.swift; sourceTree = "<group>"; };
		OBJ_84 /* Await.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Await.swift; sourceTree = "<group>"; };
		OBJ_85 /* Errors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Errors.swift; sourceTree = "<group>"; };
		OBJ_86 /* Functional.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Functional.swift; sourceTree = "<group>"; };
		OBJ_87 /* SourceLocation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SourceLocation.swift; sourceTree = "<group>"; };
		OBJ_88 /* Stringers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Stringers.swift; sourceTree = "<group>"; };
		OBJ_89 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/franco/Projects/TestSpy/.build/checkouts/Nimble--4242004824474893651/Package.swift"; sourceTree = "<group>"; };
		"TestSpy::TestSpy::Product" /* TestSpy.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = TestSpy.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"TestSpy::TestSpyTests::Product" /* TestSpyTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = TestSpyTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_150 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_167 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_168 /* Nimble.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_195 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_196 /* TestSpy.framework in Frameworks */,
				OBJ_197 /* Nimble.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_11 /* TestSpy */ = {
			isa = PBXGroup;
			children = (
				OBJ_12 /* CallstackContainer.swift */,
				OBJ_13 /* Predicates */,
				OBJ_16 /* TestSpy.swift */,
			);
			path = TestSpy;
			sourceTree = "<group>";
		};
		OBJ_13 /* Predicates */ = {
			isa = PBXGroup;
			children = (
				OBJ_14 /* CallstackMatcher.swift */,
				OBJ_15 /* CallstackPredicate.swift */,
			);
			path = Predicates;
			sourceTree = "<group>";
		};
		OBJ_17 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_18 /* TestSpyTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_18 /* TestSpyTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* CallStackContainerSpec.swift */,
				OBJ_20 /* CallstackMatcherSpec.swift */,
				OBJ_21 /* CallstackMatchers+NimbleSpec.swift */,
				OBJ_22 /* Test Classes */,
				OBJ_26 /* TestSpy+MatchersSpec.swift */,
				OBJ_27 /* TestSpySpec.swift */,
				OBJ_28 /* XCTestManifests.swift */,
			);
			name = TestSpyTests;
			path = Tests/TestSpyTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_22 /* Test Classes */ = {
			isa = PBXGroup;
			children = (
				OBJ_23 /* FakeCallstackPredicate.swift */,
				OBJ_24 /* TestMethod.swift */,
				OBJ_25 /* TestSpyObject.swift */,
			);
			path = "Test Classes";
			sourceTree = "<group>";
		};
		OBJ_31 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_32 /* Nimble 7.2.0 */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_32 /* Nimble 7.2.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_33 /* Nimble */,
				OBJ_89 /* Package.swift */,
			);
			name = "Nimble 7.2.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_33 /* Nimble */ = {
			isa = PBXGroup;
			children = (
				OBJ_34 /* Adapters */,
				OBJ_44 /* DSL+Wait.swift */,
				OBJ_45 /* DSL.swift */,
				OBJ_46 /* Expectation.swift */,
				OBJ_47 /* ExpectationMessage.swift */,
				OBJ_48 /* Expression.swift */,
				OBJ_49 /* FailureMessage.swift */,
				OBJ_50 /* Matchers */,
				OBJ_83 /* Utils */,
			);
			name = Nimble;
			path = ".build/checkouts/Nimble--4242004824474893651/Sources/Nimble";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_34 /* Adapters */ = {
			isa = PBXGroup;
			children = (
				OBJ_35 /* AdapterProtocols.swift */,
				OBJ_36 /* AssertionDispatcher.swift */,
				OBJ_37 /* AssertionRecorder.swift */,
				OBJ_38 /* NMBExpectation.swift */,
				OBJ_39 /* NMBObjCMatcher.swift */,
				OBJ_40 /* NimbleEnvironment.swift */,
				OBJ_41 /* NimbleXCTestHandler.swift */,
				OBJ_42 /* NonObjectiveC */,
			);
			path = Adapters;
			sourceTree = "<group>";
		};
		OBJ_42 /* NonObjectiveC */ = {
			isa = PBXGroup;
			children = (
				OBJ_43 /* ExceptionCapture.swift */,
			);
			path = NonObjectiveC;
			sourceTree = "<group>";
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_17 /* Tests */,
				OBJ_29 /* SourceryExample */,
				OBJ_30 /* Carthage */,
				OBJ_31 /* Dependencies */,
				OBJ_90 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_50 /* Matchers */ = {
			isa = PBXGroup;
			children = (
				OBJ_51 /* AllPass.swift */,
				OBJ_52 /* Async.swift */,
				OBJ_53 /* BeAKindOf.swift */,
				OBJ_54 /* BeAnInstanceOf.swift */,
				OBJ_55 /* BeCloseTo.swift */,
				OBJ_56 /* BeEmpty.swift */,
				OBJ_57 /* BeGreaterThan.swift */,
				OBJ_58 /* BeGreaterThanOrEqualTo.swift */,
				OBJ_59 /* BeIdenticalTo.swift */,
				OBJ_60 /* BeLessThan.swift */,
				OBJ_61 /* BeLessThanOrEqual.swift */,
				OBJ_62 /* BeLogical.swift */,
				OBJ_63 /* BeNil.swift */,
				OBJ_64 /* BeVoid.swift */,
				OBJ_65 /* BeginWith.swift */,
				OBJ_66 /* Contain.swift */,
				OBJ_67 /* ContainElementSatisfying.swift */,
				OBJ_68 /* EndWith.swift */,
				OBJ_69 /* Equal.swift */,
				OBJ_70 /* HaveCount.swift */,
				OBJ_71 /* Match.swift */,
				OBJ_72 /* MatchError.swift */,
				OBJ_73 /* MatcherFunc.swift */,
				OBJ_74 /* MatcherProtocols.swift */,
				OBJ_75 /* PostNotification.swift */,
				OBJ_76 /* Predicate.swift */,
				OBJ_77 /* RaisesException.swift */,
				OBJ_78 /* SatisfyAllOf.swift */,
				OBJ_79 /* SatisfyAnyOf.swift */,
				OBJ_80 /* ThrowAssertion.swift */,
				OBJ_81 /* ThrowError.swift */,
				OBJ_82 /* ToSucceed.swift */,
			);
			path = Matchers;
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* TestSpy */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* TestSpy */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* Nimble Matchers */,
				OBJ_11 /* TestSpy */,
			);
			name = TestSpy;
			path = Sources/TestSpy;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_83 /* Utils */ = {
			isa = PBXGroup;
			children = (
				OBJ_84 /* Await.swift */,
				OBJ_85 /* Errors.swift */,
				OBJ_86 /* Functional.swift */,
				OBJ_87 /* SourceLocation.swift */,
				OBJ_88 /* Stringers.swift */,
			);
			path = Utils;
			sourceTree = "<group>";
		};
		OBJ_9 /* Nimble Matchers */ = {
			isa = PBXGroup;
			children = (
				OBJ_10 /* TestSpy+Matchers.swift */,
			);
			path = "Nimble Matchers";
			sourceTree = "<group>";
		};
		OBJ_90 /* Products */ = {
			isa = PBXGroup;
			children = (
				"TestSpy::TestSpyTests::Product" /* TestSpyTests.xctest */,
				"TestSpy::TestSpy::Product" /* TestSpy.framework */,
				"Nimble::Nimble::Product" /* Nimble.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Nimble::Nimble" /* Nimble */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_95 /* Build configuration list for PBXNativeTarget "Nimble" */;
			buildPhases = (
				OBJ_98 /* Sources */,
				OBJ_150 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Nimble;
			productName = Nimble;
			productReference = "Nimble::Nimble::Product" /* Nimble.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Nimble::SwiftPMPackageDescription" /* NimblePackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_152 /* Build configuration list for PBXNativeTarget "NimblePackageDescription" */;
			buildPhases = (
				OBJ_155 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = NimblePackageDescription;
			productName = NimblePackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"TestSpy::SwiftPMPackageDescription" /* TestSpyPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_171 /* Build configuration list for PBXNativeTarget "TestSpyPackageDescription" */;
			buildPhases = (
				OBJ_174 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = TestSpyPackageDescription;
			productName = TestSpyPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"TestSpy::TestSpy" /* TestSpy */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_158 /* Build configuration list for PBXNativeTarget "TestSpy" */;
			buildPhases = (
				OBJ_161 /* Sources */,
				OBJ_167 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_169 /* PBXTargetDependency */,
			);
			name = TestSpy;
			productName = TestSpy;
			productReference = "TestSpy::TestSpy::Product" /* TestSpy.framework */;
			productType = "com.apple.product-type.framework";
		};
		"TestSpy::TestSpyTests" /* TestSpyTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_182 /* Build configuration list for PBXNativeTarget "TestSpyTests" */;
			buildPhases = (
				OBJ_185 /* Sources */,
				OBJ_195 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_198 /* PBXTargetDependency */,
				OBJ_199 /* PBXTargetDependency */,
			);
			name = TestSpyTests;
			productName = TestSpyTests;
			productReference = "TestSpy::TestSpyTests::Product" /* TestSpyTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0940;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "TestSpy" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_90 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Nimble::Nimble" /* Nimble */,
				"Nimble::SwiftPMPackageDescription" /* NimblePackageDescription */,
				"TestSpy::TestSpy" /* TestSpy */,
				"TestSpy::SwiftPMPackageDescription" /* TestSpyPackageDescription */,
				"TestSpy::TestSpyPackageTests::ProductTarget" /* TestSpyPackageTests */,
				"TestSpy::TestSpyTests" /* TestSpyTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_155 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_156 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_161 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_162 /* TestSpy+Matchers.swift in Sources */,
				OBJ_163 /* CallstackContainer.swift in Sources */,
				OBJ_164 /* CallstackMatcher.swift in Sources */,
				OBJ_165 /* CallstackPredicate.swift in Sources */,
				OBJ_166 /* TestSpy.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_174 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_175 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_185 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_186 /* CallStackContainerSpec.swift in Sources */,
				OBJ_187 /* CallstackMatcherSpec.swift in Sources */,
				OBJ_188 /* CallstackMatchers+NimbleSpec.swift in Sources */,
				OBJ_189 /* FakeCallstackPredicate.swift in Sources */,
				OBJ_190 /* TestMethod.swift in Sources */,
				OBJ_191 /* TestSpyObject.swift in Sources */,
				OBJ_192 /* TestSpy+MatchersSpec.swift in Sources */,
				OBJ_193 /* TestSpySpec.swift in Sources */,
				OBJ_194 /* XCTestManifests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_98 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_99 /* AdapterProtocols.swift in Sources */,
				OBJ_100 /* AssertionDispatcher.swift in Sources */,
				OBJ_101 /* AssertionRecorder.swift in Sources */,
				OBJ_102 /* NMBExpectation.swift in Sources */,
				OBJ_103 /* NMBObjCMatcher.swift in Sources */,
				OBJ_104 /* NimbleEnvironment.swift in Sources */,
				OBJ_105 /* NimbleXCTestHandler.swift in Sources */,
				OBJ_106 /* ExceptionCapture.swift in Sources */,
				OBJ_107 /* DSL+Wait.swift in Sources */,
				OBJ_108 /* DSL.swift in Sources */,
				OBJ_109 /* Expectation.swift in Sources */,
				OBJ_110 /* ExpectationMessage.swift in Sources */,
				OBJ_111 /* Expression.swift in Sources */,
				OBJ_112 /* FailureMessage.swift in Sources */,
				OBJ_113 /* AllPass.swift in Sources */,
				OBJ_114 /* Async.swift in Sources */,
				OBJ_115 /* BeAKindOf.swift in Sources */,
				OBJ_116 /* BeAnInstanceOf.swift in Sources */,
				OBJ_117 /* BeCloseTo.swift in Sources */,
				OBJ_118 /* BeEmpty.swift in Sources */,
				OBJ_119 /* BeGreaterThan.swift in Sources */,
				OBJ_120 /* BeGreaterThanOrEqualTo.swift in Sources */,
				OBJ_121 /* BeIdenticalTo.swift in Sources */,
				OBJ_122 /* BeLessThan.swift in Sources */,
				OBJ_123 /* BeLessThanOrEqual.swift in Sources */,
				OBJ_124 /* BeLogical.swift in Sources */,
				OBJ_125 /* BeNil.swift in Sources */,
				OBJ_126 /* BeVoid.swift in Sources */,
				OBJ_127 /* BeginWith.swift in Sources */,
				OBJ_128 /* Contain.swift in Sources */,
				OBJ_129 /* ContainElementSatisfying.swift in Sources */,
				OBJ_130 /* EndWith.swift in Sources */,
				OBJ_131 /* Equal.swift in Sources */,
				OBJ_132 /* HaveCount.swift in Sources */,
				OBJ_133 /* Match.swift in Sources */,
				OBJ_134 /* MatchError.swift in Sources */,
				OBJ_135 /* MatcherFunc.swift in Sources */,
				OBJ_136 /* MatcherProtocols.swift in Sources */,
				OBJ_137 /* PostNotification.swift in Sources */,
				OBJ_138 /* Predicate.swift in Sources */,
				OBJ_139 /* RaisesException.swift in Sources */,
				OBJ_140 /* SatisfyAllOf.swift in Sources */,
				OBJ_141 /* SatisfyAnyOf.swift in Sources */,
				OBJ_142 /* ThrowAssertion.swift in Sources */,
				OBJ_143 /* ThrowError.swift in Sources */,
				OBJ_144 /* ToSucceed.swift in Sources */,
				OBJ_145 /* Await.swift in Sources */,
				OBJ_146 /* Errors.swift in Sources */,
				OBJ_147 /* Functional.swift in Sources */,
				OBJ_148 /* SourceLocation.swift in Sources */,
				OBJ_149 /* Stringers.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_169 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Nimble::Nimble" /* Nimble */;
			targetProxy = 9DB0E776213D466A000BD146 /* PBXContainerItemProxy */;
		};
		OBJ_180 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "TestSpy::TestSpyTests" /* TestSpyTests */;
			targetProxy = 9DB0E779213D466A000BD146 /* PBXContainerItemProxy */;
		};
		OBJ_198 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "TestSpy::TestSpy" /* TestSpy */;
			targetProxy = 9DB0E777213D466A000BD146 /* PBXContainerItemProxy */;
		};
		OBJ_199 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Nimble::Nimble" /* Nimble */;
			targetProxy = 9DB0E778213D466A000BD146 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_153 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_154 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_159 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = TestSpy.xcodeproj/TestSpy_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = TestSpy;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = TestSpy;
			};
			name = Debug;
		};
		OBJ_160 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = TestSpy.xcodeproj/TestSpy_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = TestSpy;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = TestSpy;
			};
			name = Release;
		};
		OBJ_172 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_173 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_178 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_179 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_183 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = TestSpy.xcodeproj/TestSpyTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = TestSpyTests;
			};
			name = Debug;
		};
		OBJ_184 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = TestSpy.xcodeproj/TestSpyTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = TestSpyTests;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_96 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = TestSpy.xcodeproj/Nimble_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Nimble;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Nimble;
			};
			name = Debug;
		};
		OBJ_97 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = TestSpy.xcodeproj/Nimble_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Nimble;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Nimble;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_152 /* Build configuration list for PBXNativeTarget "NimblePackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_153 /* Debug */,
				OBJ_154 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_158 /* Build configuration list for PBXNativeTarget "TestSpy" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_159 /* Debug */,
				OBJ_160 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_171 /* Build configuration list for PBXNativeTarget "TestSpyPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_172 /* Debug */,
				OBJ_173 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_177 /* Build configuration list for PBXAggregateTarget "TestSpyPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_178 /* Debug */,
				OBJ_179 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_182 /* Build configuration list for PBXNativeTarget "TestSpyTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_183 /* Debug */,
				OBJ_184 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_2 /* Build configuration list for PBXProject "TestSpy" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_95 /* Build configuration list for PBXNativeTarget "Nimble" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_96 /* Debug */,
				OBJ_97 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
